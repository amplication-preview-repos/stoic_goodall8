/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { ObjectWhereUniqueInput } from "../../object/base/ObjectWhereUniqueInput";
import { PropertyWhereUniqueInput } from "../../property/base/PropertyWhereUniqueInput";
import { OntologyWhereUniqueInput } from "../../ontology/base/OntologyWhereUniqueInput";

@InputType()
class ClassModelWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ObjectWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ObjectWhereUniqueInput)
  @IsOptional()
  @Field(() => ObjectWhereUniqueInput, {
    nullable: true,
  })
  objects?: ObjectWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => PropertyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PropertyWhereUniqueInput)
  @IsOptional()
  @Field(() => PropertyWhereUniqueInput, {
    nullable: true,
  })
  properties?: PropertyWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => OntologyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OntologyWhereUniqueInput)
  @IsOptional()
  @Field(() => OntologyWhereUniqueInput, {
    nullable: true,
  })
  ontologies?: OntologyWhereUniqueInput;
}

export { ClassModelWhereInput as ClassModelWhereInput };
